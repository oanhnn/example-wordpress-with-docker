version: "3.5"

### Networks ###
networks:
  default: {}

### Volumes ###
volumes:
  db-data: {}

### Services ###
services:

  ### Mysql service ###
  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE:      ${DB_NAME}
      MYSQL_USER:          ${DB_USER}
      MYSQL_PASSWORD:      ${DB_PASS}
    networks:
      - default
    ports:
      - 3306:3306
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/mysql
      # - init-db:/docker-entrypoint-initdb.d

  ### Wordpress service ###
  wp:
    build:
      context: ./docker/wordpress
      dockerfile: Dockerfile
    depends_on:
      - db
    environment:
      WORDPRESS_DB_NAME:      ${DB_NAME}
      WORDPRESS_DB_USER:      ${DB_USER}
      WORDPRESS_DB_PASSWORD:  ${DB_PASS}
      WORDPRESS_DB_HOST:      db
      WORDPRESS_DB_CHARSET:   utf8
      # WORDPRESS_DB_COLLATE:
      WORDPRESS_TABLE_PREFIX: wp_
      # WORDPRESS_AUTH_KEY:
      # WORDPRESS_SECURE_AUTH_KEY:
      # WORDPRESS_LOGGED_IN_KEY:
      # WORDPRESS_NONCE_KEY:
      # WORDPRESS_AUTH_SALT:
      # WORDPRESS_SECURE_AUTH_SALT:
      # WORDPRESS_LOGGED_IN_SALT:
      # WORDPRESS_NONCE_SALT:
      WORDPRESS_DEBUG:     1
    networks:
      - default
    restart: unless-stopped
    volumes:
      - ./docker/wordpress/php.ini:/usr/local/etc/php/conf.d/dev.ini:ro
      - ./app:/var/www/html

  ### Web service ###
  web:
    image: nginx:stable-alpine
    # build:
    #   context: ./docker/nginx
    #   dockerfile: Dockerfile
    depends_on:
      - wp
    networks:
      - default
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./app:/var/www/html
